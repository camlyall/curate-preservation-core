// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: a3m/api/transferservice/v1beta1/request_response.proto

package transferservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PackageStatus int32

const (
	PackageStatus_PACKAGE_STATUS_UNSPECIFIED PackageStatus = 0
	PackageStatus_PACKAGE_STATUS_FAILED      PackageStatus = 1
	PackageStatus_PACKAGE_STATUS_REJECTED    PackageStatus = 2
	PackageStatus_PACKAGE_STATUS_COMPLETE    PackageStatus = 3
	PackageStatus_PACKAGE_STATUS_PROCESSING  PackageStatus = 4
)

// Enum value maps for PackageStatus.
var (
	PackageStatus_name = map[int32]string{
		0: "PACKAGE_STATUS_UNSPECIFIED",
		1: "PACKAGE_STATUS_FAILED",
		2: "PACKAGE_STATUS_REJECTED",
		3: "PACKAGE_STATUS_COMPLETE",
		4: "PACKAGE_STATUS_PROCESSING",
	}
	PackageStatus_value = map[string]int32{
		"PACKAGE_STATUS_UNSPECIFIED": 0,
		"PACKAGE_STATUS_FAILED":      1,
		"PACKAGE_STATUS_REJECTED":    2,
		"PACKAGE_STATUS_COMPLETE":    3,
		"PACKAGE_STATUS_PROCESSING":  4,
	}
)

func (x PackageStatus) Enum() *PackageStatus {
	p := new(PackageStatus)
	*p = x
	return p
}

func (x PackageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PackageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_enumTypes[0].Descriptor()
}

func (PackageStatus) Type() protoreflect.EnumType {
	return &file_a3m_api_transferservice_v1beta1_request_response_proto_enumTypes[0]
}

func (x PackageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PackageStatus.Descriptor instead.
func (PackageStatus) EnumDescriptor() ([]byte, []int) {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP(), []int{0}
}

type Job_Status int32

const (
	Job_STATUS_UNSPECIFIED Job_Status = 0
	Job_STATUS_COMPLETE    Job_Status = 1
	Job_STATUS_PROCESSING  Job_Status = 2
	Job_STATUS_FAILED      Job_Status = 3
)

// Enum value maps for Job_Status.
var (
	Job_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_COMPLETE",
		2: "STATUS_PROCESSING",
		3: "STATUS_FAILED",
	}
	Job_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_COMPLETE":    1,
		"STATUS_PROCESSING":  2,
		"STATUS_FAILED":      3,
	}
)

func (x Job_Status) Enum() *Job_Status {
	p := new(Job_Status)
	*p = x
	return p
}

func (x Job_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Job_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_enumTypes[1].Descriptor()
}

func (Job_Status) Type() protoreflect.EnumType {
	return &file_a3m_api_transferservice_v1beta1_request_response_proto_enumTypes[1]
}

func (x Job_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Job_Status.Descriptor instead.
func (Job_Status) EnumDescriptor() ([]byte, []int) {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP(), []int{8, 0}
}

type ProcessingConfig_AIPCompressionAlgorithm int32

const (
	ProcessingConfig_AIP_COMPRESSION_ALGORITHM_UNSPECIFIED  ProcessingConfig_AIPCompressionAlgorithm = 0
	ProcessingConfig_AIP_COMPRESSION_ALGORITHM_UNCOMPRESSED ProcessingConfig_AIPCompressionAlgorithm = 1 // It breaks in verify_aip.
	ProcessingConfig_AIP_COMPRESSION_ALGORITHM_TAR          ProcessingConfig_AIPCompressionAlgorithm = 2 // Not supported yet!
	ProcessingConfig_AIP_COMPRESSION_ALGORITHM_TAR_BZIP2    ProcessingConfig_AIPCompressionAlgorithm = 3
	ProcessingConfig_AIP_COMPRESSION_ALGORITHM_TAR_GZIP     ProcessingConfig_AIPCompressionAlgorithm = 4
	ProcessingConfig_AIP_COMPRESSION_ALGORITHM_S7_COPY      ProcessingConfig_AIPCompressionAlgorithm = 5
	ProcessingConfig_AIP_COMPRESSION_ALGORITHM_S7_BZIP2     ProcessingConfig_AIPCompressionAlgorithm = 6
	ProcessingConfig_AIP_COMPRESSION_ALGORITHM_S7_LZMA      ProcessingConfig_AIPCompressionAlgorithm = 7
)

// Enum value maps for ProcessingConfig_AIPCompressionAlgorithm.
var (
	ProcessingConfig_AIPCompressionAlgorithm_name = map[int32]string{
		0: "AIP_COMPRESSION_ALGORITHM_UNSPECIFIED",
		1: "AIP_COMPRESSION_ALGORITHM_UNCOMPRESSED",
		2: "AIP_COMPRESSION_ALGORITHM_TAR",
		3: "AIP_COMPRESSION_ALGORITHM_TAR_BZIP2",
		4: "AIP_COMPRESSION_ALGORITHM_TAR_GZIP",
		5: "AIP_COMPRESSION_ALGORITHM_S7_COPY",
		6: "AIP_COMPRESSION_ALGORITHM_S7_BZIP2",
		7: "AIP_COMPRESSION_ALGORITHM_S7_LZMA",
	}
	ProcessingConfig_AIPCompressionAlgorithm_value = map[string]int32{
		"AIP_COMPRESSION_ALGORITHM_UNSPECIFIED":  0,
		"AIP_COMPRESSION_ALGORITHM_UNCOMPRESSED": 1,
		"AIP_COMPRESSION_ALGORITHM_TAR":          2,
		"AIP_COMPRESSION_ALGORITHM_TAR_BZIP2":    3,
		"AIP_COMPRESSION_ALGORITHM_TAR_GZIP":     4,
		"AIP_COMPRESSION_ALGORITHM_S7_COPY":      5,
		"AIP_COMPRESSION_ALGORITHM_S7_BZIP2":     6,
		"AIP_COMPRESSION_ALGORITHM_S7_LZMA":      7,
	}
)

func (x ProcessingConfig_AIPCompressionAlgorithm) Enum() *ProcessingConfig_AIPCompressionAlgorithm {
	p := new(ProcessingConfig_AIPCompressionAlgorithm)
	*p = x
	return p
}

func (x ProcessingConfig_AIPCompressionAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessingConfig_AIPCompressionAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_enumTypes[2].Descriptor()
}

func (ProcessingConfig_AIPCompressionAlgorithm) Type() protoreflect.EnumType {
	return &file_a3m_api_transferservice_v1beta1_request_response_proto_enumTypes[2]
}

func (x ProcessingConfig_AIPCompressionAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessingConfig_AIPCompressionAlgorithm.Descriptor instead.
func (ProcessingConfig_AIPCompressionAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP(), []int{10, 0}
}

type SubmitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Config        *ProcessingConfig      `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitRequest) Reset() {
	*x = SubmitRequest{}
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitRequest) ProtoMessage() {}

func (x *SubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitRequest.ProtoReflect.Descriptor instead.
func (*SubmitRequest) Descriptor() ([]byte, []int) {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP(), []int{0}
}

func (x *SubmitRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubmitRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SubmitRequest) GetConfig() *ProcessingConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type SubmitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitResponse) Reset() {
	*x = SubmitResponse{}
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitResponse) ProtoMessage() {}

func (x *SubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitResponse.ProtoReflect.Descriptor instead.
func (*SubmitResponse) Descriptor() ([]byte, []int) {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP(), []int{2}
}

func (x *ReadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        PackageStatus          `protobuf:"varint,1,opt,name=status,proto3,enum=a3m.api.transferservice.v1beta1.PackageStatus" json:"status,omitempty"`
	Job           string                 `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	Jobs          []*Job                 `protobuf:"bytes,3,rep,name=jobs,proto3" json:"jobs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP(), []int{3}
}

func (x *ReadResponse) GetStatus() PackageStatus {
	if x != nil {
		return x.Status
	}
	return PackageStatus_PACKAGE_STATUS_UNSPECIFIED
}

func (x *ReadResponse) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *ReadResponse) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type ListTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksRequest) Reset() {
	*x = ListTasksRequest{}
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRequest) ProtoMessage() {}

func (x *ListTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRequest.ProtoReflect.Descriptor instead.
func (*ListTasksRequest) Descriptor() ([]byte, []int) {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP(), []int{4}
}

func (x *ListTasksRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type ListTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksResponse) Reset() {
	*x = ListTasksResponse{}
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksResponse) ProtoMessage() {}

func (x *ListTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksResponse.ProtoReflect.Descriptor instead.
func (*ListTasksResponse) Descriptor() ([]byte, []int) {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP(), []int{5}
}

func (x *ListTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type EmptyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP(), []int{6}
}

type EmptyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP(), []int{7}
}

type Job struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	LinkId        string                 `protobuf:"bytes,4,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	Status        Job_Status             `protobuf:"varint,5,opt,name=status,proto3,enum=a3m.api.transferservice.v1beta1.Job_Status" json:"status,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP(), []int{8}
}

func (x *Job) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Job) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Job) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Job) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

func (x *Job) GetStatus() Job_Status {
	if x != nil {
		return x.Status
	}
	return Job_STATUS_UNSPECIFIED
}

func (x *Job) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FileId        string                 `protobuf:"bytes,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	ExitCode      int32                  `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Filename      string                 `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
	Execution     string                 `protobuf:"bytes,5,opt,name=execution,proto3" json:"execution,omitempty"`
	Arguments     string                 `protobuf:"bytes,6,opt,name=arguments,proto3" json:"arguments,omitempty"`
	Stdout        string                 `protobuf:"bytes,7,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        string                 `protobuf:"bytes,8,opt,name=stderr,proto3" json:"stderr,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP(), []int{9}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *Task) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *Task) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Task) GetExecution() string {
	if x != nil {
		return x.Execution
	}
	return ""
}

func (x *Task) GetArguments() string {
	if x != nil {
		return x.Arguments
	}
	return ""
}

func (x *Task) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *Task) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *Task) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Task) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type ProcessingConfig struct {
	state                           protoimpl.MessageState `protogen:"open.v1"`
	AssignUuidsToDirectories        bool                   `protobuf:"varint,1,opt,name=assign_uuids_to_directories,json=assignUuidsToDirectories,proto3" json:"assign_uuids_to_directories,omitempty"`
	ExamineContents                 bool                   `protobuf:"varint,2,opt,name=examine_contents,json=examineContents,proto3" json:"examine_contents,omitempty"`
	GenerateTransferStructureReport bool                   `protobuf:"varint,3,opt,name=generate_transfer_structure_report,json=generateTransferStructureReport,proto3" json:"generate_transfer_structure_report,omitempty"`
	DocumentEmptyDirectories        bool                   `protobuf:"varint,4,opt,name=document_empty_directories,json=documentEmptyDirectories,proto3" json:"document_empty_directories,omitempty"`
	ExtractPackages                 bool                   `protobuf:"varint,5,opt,name=extract_packages,json=extractPackages,proto3" json:"extract_packages,omitempty"`
	DeletePackagesAfterExtraction   bool                   `protobuf:"varint,6,opt,name=delete_packages_after_extraction,json=deletePackagesAfterExtraction,proto3" json:"delete_packages_after_extraction,omitempty"`
	IdentifyTransfer                bool                   `protobuf:"varint,7,opt,name=identify_transfer,json=identifyTransfer,proto3" json:"identify_transfer,omitempty"`
	// identify_submission_and_metadata represents a single configuration
	// attribute that controls two separate file format identification jobs
	// in the workflow: one for objects/submissionDocumentation and one
	// for objects/metadata
	IdentifySubmissionAndMetadata                bool `protobuf:"varint,8,opt,name=identify_submission_and_metadata,json=identifySubmissionAndMetadata,proto3" json:"identify_submission_and_metadata,omitempty"`
	IdentifyBeforeNormalization                  bool `protobuf:"varint,9,opt,name=identify_before_normalization,json=identifyBeforeNormalization,proto3" json:"identify_before_normalization,omitempty"`
	Normalize                                    bool `protobuf:"varint,10,opt,name=normalize,proto3" json:"normalize,omitempty"`
	TranscribeFiles                              bool `protobuf:"varint,11,opt,name=transcribe_files,json=transcribeFiles,proto3" json:"transcribe_files,omitempty"`
	PerformPolicyChecksOnOriginals               bool `protobuf:"varint,12,opt,name=perform_policy_checks_on_originals,json=performPolicyChecksOnOriginals,proto3" json:"perform_policy_checks_on_originals,omitempty"`
	PerformPolicyChecksOnPreservationDerivatives bool `protobuf:"varint,13,opt,name=perform_policy_checks_on_preservation_derivatives,json=performPolicyChecksOnPreservationDerivatives,proto3" json:"perform_policy_checks_on_preservation_derivatives,omitempty"`
	// AIP compression level (1 is the fastest, 9 is the smallest).
	AipCompressionLevel int32 `protobuf:"varint,14,opt,name=aip_compression_level,json=aipCompressionLevel,proto3" json:"aip_compression_level,omitempty"`
	// AIP compression algorithm
	AipCompressionAlgorithm ProcessingConfig_AIPCompressionAlgorithm `protobuf:"varint,15,opt,name=aip_compression_algorithm,json=aipCompressionAlgorithm,proto3,enum=a3m.api.transferservice.v1beta1.ProcessingConfig_AIPCompressionAlgorithm" json:"aip_compression_algorithm,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ProcessingConfig) Reset() {
	*x = ProcessingConfig{}
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingConfig) ProtoMessage() {}

func (x *ProcessingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingConfig.ProtoReflect.Descriptor instead.
func (*ProcessingConfig) Descriptor() ([]byte, []int) {
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP(), []int{10}
}

func (x *ProcessingConfig) GetAssignUuidsToDirectories() bool {
	if x != nil {
		return x.AssignUuidsToDirectories
	}
	return false
}

func (x *ProcessingConfig) GetExamineContents() bool {
	if x != nil {
		return x.ExamineContents
	}
	return false
}

func (x *ProcessingConfig) GetGenerateTransferStructureReport() bool {
	if x != nil {
		return x.GenerateTransferStructureReport
	}
	return false
}

func (x *ProcessingConfig) GetDocumentEmptyDirectories() bool {
	if x != nil {
		return x.DocumentEmptyDirectories
	}
	return false
}

func (x *ProcessingConfig) GetExtractPackages() bool {
	if x != nil {
		return x.ExtractPackages
	}
	return false
}

func (x *ProcessingConfig) GetDeletePackagesAfterExtraction() bool {
	if x != nil {
		return x.DeletePackagesAfterExtraction
	}
	return false
}

func (x *ProcessingConfig) GetIdentifyTransfer() bool {
	if x != nil {
		return x.IdentifyTransfer
	}
	return false
}

func (x *ProcessingConfig) GetIdentifySubmissionAndMetadata() bool {
	if x != nil {
		return x.IdentifySubmissionAndMetadata
	}
	return false
}

func (x *ProcessingConfig) GetIdentifyBeforeNormalization() bool {
	if x != nil {
		return x.IdentifyBeforeNormalization
	}
	return false
}

func (x *ProcessingConfig) GetNormalize() bool {
	if x != nil {
		return x.Normalize
	}
	return false
}

func (x *ProcessingConfig) GetTranscribeFiles() bool {
	if x != nil {
		return x.TranscribeFiles
	}
	return false
}

func (x *ProcessingConfig) GetPerformPolicyChecksOnOriginals() bool {
	if x != nil {
		return x.PerformPolicyChecksOnOriginals
	}
	return false
}

func (x *ProcessingConfig) GetPerformPolicyChecksOnPreservationDerivatives() bool {
	if x != nil {
		return x.PerformPolicyChecksOnPreservationDerivatives
	}
	return false
}

func (x *ProcessingConfig) GetAipCompressionLevel() int32 {
	if x != nil {
		return x.AipCompressionLevel
	}
	return 0
}

func (x *ProcessingConfig) GetAipCompressionAlgorithm() ProcessingConfig_AIPCompressionAlgorithm {
	if x != nil {
		return x.AipCompressionAlgorithm
	}
	return ProcessingConfig_AIP_COMPRESSION_ALGORITHM_UNSPECIFIED
}

var File_a3m_api_transferservice_v1beta1_request_response_proto protoreflect.FileDescriptor

var file_a3m_api_transferservice_v1beta1_request_response_proto_rawDesc = string([]byte{
	0x0a, 0x36, 0x61, 0x33, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x61, 0x33, 0x6d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x0d, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x49, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x33, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x20, 0x0a,
	0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x1d, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa2,
	0x01, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2e, 0x2e, 0x61, 0x33, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x38, 0x0a, 0x04, 0x6a, 0x6f, 0x62,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x33, 0x6d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6a,
	0x6f, 0x62, 0x73, 0x22, 0x29, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x50,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x33, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xb9, 0x02, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61,
	0x33, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a,
	0x6f, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54,
	0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52,
	0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x22, 0xc6, 0x02,
	0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x64, 0x65, 0x72, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xcc, 0x0a, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a, 0x1b, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x18, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x73, 0x54, 0x6f, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78,
	0x61, 0x6d, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4b, 0x0a, 0x22, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x20, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x12, 0x47, 0x0a, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x79, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41,
	0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x1d, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x22, 0x70, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x5f, 0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1e, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x4f, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x73, 0x12, 0x67, 0x0a, 0x31, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x5f, 0x6f, 0x6e, 0x5f,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2c,
	0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x4f, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15,
	0x61, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x61, 0x69, 0x70,
	0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x85, 0x01, 0x0a, 0x19, 0x61, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x61, 0x33, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x49, 0x50, 0x43, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52,
	0x17, 0x61, 0x69, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x22, 0xda, 0x02, 0x0a, 0x17, 0x41, 0x49, 0x50,
	0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x68, 0x6d, 0x12, 0x29, 0x0a, 0x25, 0x41, 0x49, 0x50, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x52, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48,
	0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x2a, 0x0a, 0x26, 0x41, 0x49, 0x50, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x55, 0x4e, 0x43,
	0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x45, 0x44, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x41,
	0x49, 0x50, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x41,
	0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x54, 0x41, 0x52, 0x10, 0x02, 0x12, 0x27,
	0x0a, 0x23, 0x41, 0x49, 0x50, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x54, 0x41, 0x52, 0x5f,
	0x42, 0x5a, 0x49, 0x50, 0x32, 0x10, 0x03, 0x12, 0x26, 0x0a, 0x22, 0x41, 0x49, 0x50, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52,
	0x49, 0x54, 0x48, 0x4d, 0x5f, 0x54, 0x41, 0x52, 0x5f, 0x47, 0x5a, 0x49, 0x50, 0x10, 0x04, 0x12,
	0x25, 0x0a, 0x21, 0x41, 0x49, 0x50, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x53, 0x37, 0x5f,
	0x43, 0x4f, 0x50, 0x59, 0x10, 0x05, 0x12, 0x26, 0x0a, 0x22, 0x41, 0x49, 0x50, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49,
	0x54, 0x48, 0x4d, 0x5f, 0x53, 0x37, 0x5f, 0x42, 0x5a, 0x49, 0x50, 0x32, 0x10, 0x06, 0x12, 0x25,
	0x0a, 0x21, 0x41, 0x49, 0x50, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x53, 0x37, 0x5f, 0x4c,
	0x5a, 0x4d, 0x41, 0x10, 0x07, 0x2a, 0xa3, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x41, 0x43, 0x4b, 0x41,
	0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x41, 0x43, 0x4b, 0x41,
	0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x1b, 0x0a, 0x17, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19,
	0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50,
	0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x42, 0x57, 0x5a, 0x55, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x74, 0x65, 0x66, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x61, 0x33, 0x6d, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x33, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x3b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescOnce sync.Once
	file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescData []byte
)

func file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescGZIP() []byte {
	file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescOnce.Do(func() {
		file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_a3m_api_transferservice_v1beta1_request_response_proto_rawDesc), len(file_a3m_api_transferservice_v1beta1_request_response_proto_rawDesc)))
	})
	return file_a3m_api_transferservice_v1beta1_request_response_proto_rawDescData
}

var file_a3m_api_transferservice_v1beta1_request_response_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_a3m_api_transferservice_v1beta1_request_response_proto_goTypes = []any{
	(PackageStatus)(0), // 0: a3m.api.transferservice.v1beta1.PackageStatus
	(Job_Status)(0),    // 1: a3m.api.transferservice.v1beta1.Job.Status
	(ProcessingConfig_AIPCompressionAlgorithm)(0), // 2: a3m.api.transferservice.v1beta1.ProcessingConfig.AIPCompressionAlgorithm
	(*SubmitRequest)(nil),                         // 3: a3m.api.transferservice.v1beta1.SubmitRequest
	(*SubmitResponse)(nil),                        // 4: a3m.api.transferservice.v1beta1.SubmitResponse
	(*ReadRequest)(nil),                           // 5: a3m.api.transferservice.v1beta1.ReadRequest
	(*ReadResponse)(nil),                          // 6: a3m.api.transferservice.v1beta1.ReadResponse
	(*ListTasksRequest)(nil),                      // 7: a3m.api.transferservice.v1beta1.ListTasksRequest
	(*ListTasksResponse)(nil),                     // 8: a3m.api.transferservice.v1beta1.ListTasksResponse
	(*EmptyRequest)(nil),                          // 9: a3m.api.transferservice.v1beta1.EmptyRequest
	(*EmptyResponse)(nil),                         // 10: a3m.api.transferservice.v1beta1.EmptyResponse
	(*Job)(nil),                                   // 11: a3m.api.transferservice.v1beta1.Job
	(*Task)(nil),                                  // 12: a3m.api.transferservice.v1beta1.Task
	(*ProcessingConfig)(nil),                      // 13: a3m.api.transferservice.v1beta1.ProcessingConfig
	(*timestamppb.Timestamp)(nil),                 // 14: google.protobuf.Timestamp
}
var file_a3m_api_transferservice_v1beta1_request_response_proto_depIdxs = []int32{
	13, // 0: a3m.api.transferservice.v1beta1.SubmitRequest.config:type_name -> a3m.api.transferservice.v1beta1.ProcessingConfig
	0,  // 1: a3m.api.transferservice.v1beta1.ReadResponse.status:type_name -> a3m.api.transferservice.v1beta1.PackageStatus
	11, // 2: a3m.api.transferservice.v1beta1.ReadResponse.jobs:type_name -> a3m.api.transferservice.v1beta1.Job
	12, // 3: a3m.api.transferservice.v1beta1.ListTasksResponse.tasks:type_name -> a3m.api.transferservice.v1beta1.Task
	1,  // 4: a3m.api.transferservice.v1beta1.Job.status:type_name -> a3m.api.transferservice.v1beta1.Job.Status
	14, // 5: a3m.api.transferservice.v1beta1.Job.start_time:type_name -> google.protobuf.Timestamp
	14, // 6: a3m.api.transferservice.v1beta1.Task.start_time:type_name -> google.protobuf.Timestamp
	14, // 7: a3m.api.transferservice.v1beta1.Task.end_time:type_name -> google.protobuf.Timestamp
	2,  // 8: a3m.api.transferservice.v1beta1.ProcessingConfig.aip_compression_algorithm:type_name -> a3m.api.transferservice.v1beta1.ProcessingConfig.AIPCompressionAlgorithm
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_a3m_api_transferservice_v1beta1_request_response_proto_init() }
func file_a3m_api_transferservice_v1beta1_request_response_proto_init() {
	if File_a3m_api_transferservice_v1beta1_request_response_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_a3m_api_transferservice_v1beta1_request_response_proto_rawDesc), len(file_a3m_api_transferservice_v1beta1_request_response_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_a3m_api_transferservice_v1beta1_request_response_proto_goTypes,
		DependencyIndexes: file_a3m_api_transferservice_v1beta1_request_response_proto_depIdxs,
		EnumInfos:         file_a3m_api_transferservice_v1beta1_request_response_proto_enumTypes,
		MessageInfos:      file_a3m_api_transferservice_v1beta1_request_response_proto_msgTypes,
	}.Build()
	File_a3m_api_transferservice_v1beta1_request_response_proto = out.File
	file_a3m_api_transferservice_v1beta1_request_response_proto_goTypes = nil
	file_a3m_api_transferservice_v1beta1_request_response_proto_depIdxs = nil
}
